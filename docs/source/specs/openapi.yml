openapi: 3.0.0
info:
  title: Sample API
  description: A sample API with fictional POST endpoints
  version: 1.0.0

servers:
  - url: https://api.example.com/v1

paths:
  /members:
    get:
      summary: Get all Members
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'

    post:
      summary: Create a new Member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /members/:id:
    get:
      summary: Get a Member by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      
      delete:
        summary: Delete a Member by ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      
      put:
        summary: Update a Member by ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Member'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /chats:
    get:
      summary: Get all Chats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'

    post:
      summary: Create a new Chat
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      delete:
        summary: Delete a Chat by ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      
  /chats/:id/members:
    get:
      summary: Get all Members in a Chat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
      post:
        summary: Add a Member to a Chat
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Member'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      
      delete:
        summary: Remove a Member from a Chat
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    /chats/:id/messages:
      get:
        summary: Get all Messages in a Chat
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      
      post:
        summary: Create a new Message in a Chat

        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Message'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  schemas:
    Member:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - name
        - email

    Chat:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
    
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        text:
          type: string
      required:
        - text

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  